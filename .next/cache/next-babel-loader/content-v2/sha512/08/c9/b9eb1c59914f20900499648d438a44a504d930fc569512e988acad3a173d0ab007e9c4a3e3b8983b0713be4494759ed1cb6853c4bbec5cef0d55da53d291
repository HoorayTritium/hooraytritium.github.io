{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/Users/moonh/Desktop/myblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/moonh/Desktop/myblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/moonh/Desktop/myblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/moonh/Desktop/myblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/moonh/Desktop/myblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\moonh\\\\Desktop\\\\myblog\\\\pages\\\\index.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/* index.js */\n\n\nimport * as React from 'react';\nimport Head from '../components/head';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Head, {\n          title: 'タイトル-index',\n          description: 'ディスクリプション-index',\n          keyword: 'キーワード',\n          image: 'https://images.microcms-assets.io/assets/d6d86e72e5224a9dbd45378cc264b6f9/87e9eaf03d5f47c39709bcdf4560e837/%E5%86%8D%E7%94%9F%E5%81%9C%E6%AD%A2%E3%83%9C%E3%82%BF%E3%83%B3.png',\n          url: 'https://ponsuke.work'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this), \"\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/moonh/Desktop/myblog/pages/index.tsx"],"names":["App","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAEA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,oBAAA;;IAEMA,G;;;;;;;;;;;;;6BACyB;AAC3B,aAAA,aACE,OAAA,CAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,aACE,OAAA,CAAA,IAAA,EAAA;AACE,UAAA,KAAK,EADP,YAAA;AAEE,UAAA,WAAW,EAFb,iBAAA;AAGE,UAAA,OAAO,EAHT,OAAA;AAIE,UAAA,KAAK,EAJP,gLAAA;AAKE,UAAA,GAAG,EAAE;AALP,SAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA,SAAA,EADF,IACE,CADF,EAAA,gCAAA;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,CAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EADF,IACE,CADF;AAYD;;;;EAdeC,KAAK,CAACC,S;;AAgBxB,eAAA,GAAA","sourcesContent":["/* index.js */\r\n\r\nimport * as React from 'react';\r\nimport Head from '../components/head';\r\n\r\nclass App extends React.Component {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <Head\r\n          title={'タイトル-index'}\r\n          description={'ディスクリプション-index'}\r\n          keyword={'キーワード'}\r\n          image={'https://images.microcms-assets.io/assets/d6d86e72e5224a9dbd45378cc264b6f9/87e9eaf03d5f47c39709bcdf4560e837/%E5%86%8D%E7%94%9F%E5%81%9C%E6%AD%A2%E3%83%9C%E3%82%BF%E3%83%B3.png'}\r\n          url={'https://ponsuke.work'}\r\n        />\r\n        コンテンツ\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}